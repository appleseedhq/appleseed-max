#pragma once

// appleseed.foundation headers.

#include <map>
#include <string>
#include <tuple>

namespace
{
    const std::vector<std::tuple<int, std::wstring, int>> as_blend_shader
    {
        {0, L"in_color", 14},
        {1, L"in_weight", 0},
        {2, L"in_weight_map", 15},
        {3, L"in_layer_visibility", 1},
        {4, L"in_color1", 14},
        {5, L"in_weight1", 0},
        {6, L"in_weight1_map", 15},
        {7, L"in_layer_visibility1", 1},
        {8, L"in_color2", 14},
        {9, L"in_weight2", 0},
        {10, L"in_weight2_map", 15},
        {11, L"in_layer_visibility2", 1},
        {12, L"in_color3", 14},
        {13, L"in_weight3", 0},
        {14, L"in_weight3_map", 15},
        {15, L"in_layer_visibility3", 1},
        {16, L"in_color4", 14},
        {17, L"in_weight4", 0},
        {18, L"in_weight4_map", 15},
        {19, L"in_layer_visibility4", 1},
        {20, L"in_color5", 14},
        {21, L"in_weight5", 0},
        {22, L"in_weight5_map", 15},
        {23, L"in_layer_visibility5", 1},
        {24, L"in_color6", 14},
        {25, L"in_weight6", 0},
        {26, L"in_weight6_map", 15},
        {27, L"in_layer_visibility6", 1},
        {28, L"in_color7", 14},
        {29, L"in_weight7", 0},
        {30, L"in_weight7_map", 15},
        {31, L"in_layer_visibility7", 1},
        {32, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_disney_material
    {
        {0, L"in_color", 2},
        {1, L"in_color_map", 15},
        {2, L"in_subsurface_amount", 0},
        {3, L"in_subsurface_amount_map", 15},
        {4, L"in_specular_amount", 0},
        {5, L"in_specular_amount_map", 15},
        {6, L"in_roughness", 0},
        {7, L"in_roughness_map", 15},
        {8, L"in_specular_tint", 0},
        {9, L"in_specular_tint_map", 15},
        {10, L"in_metallic_amount", 0},
        {11, L"in_metallic_amount_map", 15},
        {12, L"in_anisotropy_amount", 0},
        {13, L"in_anisotropy_amount_map", 15},
        {14, L"in_anisotropy_angle", 0},
        {15, L"in_anisotropy_angle_map", 15},
        {16, L"in_anisotropy_vector_map", 2},
        {17, L"in_anisotropy_vector_map_map", 15},
        {18, L"in_sheen_amount", 0},
        {19, L"in_sheen_amount_map", 15},
        {20, L"in_sheen_tint", 0},
        {21, L"in_sheen_tint_map", 15},
        {22, L"in_clear_coat", 0},
        {23, L"in_clear_coat_map", 15},
        {24, L"in_clear_coat_glossyness", 0},
        {25, L"in_clear_coat_glossyness_map", 15},
        {26, L"in_bump_normal_map", 15},
        {27, L"in_enable_matte", 1},
        {28, L"in_matte_opacity", 0},
        {29, L"in_matte_opacity_map", 15},
        {30, L"in_matte_opacity_color", 2},
        {31, L"in_matte_opacity_color_map", 15},
        {32, L"in_maximum_ray_depth", 1},
        {33, L"Tn_map", 15},
        {34, L"Bn_map", 15},
        {35, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_glass
    {
        {0, L"in_surface_transmittance", 2},
        {1, L"in_surface_transmittance_map", 15},
        {2, L"in_transmittance_amount", 0},
        {3, L"in_transmittance_amount_map", 15},
        {4, L"in_reflection_tint", 2},
        {5, L"in_reflection_tint_map", 15},
        {6, L"in_refraction_tint", 2},
        {7, L"in_refraction_tint_map", 15},
        {8, L"in_ior", 0},
        {9, L"in_distribution", 1},
        {10, L"in_roughness", 0},
        {11, L"in_roughness_map", 15},
        {12, L"in_specular_spread", 0},
        {13, L"in_specular_spread_map", 15},
        {14, L"in_anisotropy_amount", 0},
        {15, L"in_anisotropy_amount_map", 15},
        {16, L"in_anisotropy_angle", 0},
        {17, L"in_anisotropy_angle_map", 15},
        {18, L"in_anisotropy_mode", 1},
        {19, L"in_anisotropy_map", 2},
        {20, L"in_anisotropy_map_map", 15},
        {21, L"in_anisotropy_direction", 3},
        {22, L"in_anisotropy_direction_map", 15},
        {23, L"in_volume_transmittance", 2},
        {24, L"in_volume_transmittance_map", 15},
        {25, L"in_volume_transmittance_distance", 0},
        {26, L"in_volume_transmittance_distance_map", 15},
        {27, L"in_bump_normal_map", 15},
        {28, L"in_enable_matte", 1},
        {29, L"in_matte_opacity", 0},
        {30, L"in_matte_opacity_map", 15},
        {31, L"in_matte_opacity_color", 2},
        {32, L"in_matte_opacity_color_map", 15},
        {33, L"in_maximum_ray_depth", 1},
        {34, L"Tn_map", 15},
        {35, L"Bn_map", 15},
        {36, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_metal
    {
        {0, L"in_face_reflectance",           2},
        {1, L"in_face_reflectance_map",       15},
        {2, L"in_edge_reflectance",           2},
        {3, L"in_edge_reflectance_map",       15},
        {4, L"in_distribution",               1},
        {5, L"in_roughness",                  0},
        {6, L"in_roughness_map",              15},
        {7, L"in_anisotropy_amount",          0},
        {8, L"in_anisotropy_amount_map",      15},
        {9, L"in_anisotropy_angle",           0},
        {10, L"in_anisotropy_angle_map",      15},
        {11, L"in_anisotropy_mode",           1},
        {12, L"in_anisotropy_map",            2},
        {13, L"in_anisotropy_map_map",        15},
        {14, L"in_anisotropy_direction",      3},
        {15, L"in_anisotropy_direction_map",  15},
        {16, L"in_bump_normal_map",           15},
        {17, L"in_enable_matte",              1},
        {18, L"in_matte_opacity",             0},
        {19, L"in_matte_opacity_map",         15},
        {20, L"in_matte_opacity_color",       2},
        {21, L"in_matte_opacity_color_map",   15},
        {22, L"in_maximum_ray_depth",         1},
        {23, L"Tn_map",                       15},
        {24, L"Bn_map",                       15},
        {25, L"OSLOutputIndex",               1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_matte
    {
        {0, L"in_color", 14},
        {1, L"in_enable_matte", 1},
        {2, L"in_matte_opacity", 0},
        {3, L"in_matte_opacity_map", 15},
        {4, L"in_matte_opacity_color", 2},
        {5, L"in_matte_opacity_color_map", 15},
        {6, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_plastic
    {
        {0, L"in_color", 2},
        {1, L"in_color_map", 15},
        {2, L"in_diffuse_weight", 0},
        {3, L"in_diffuse_weight_map", 15},
        {4, L"in_scattering", 0},
        {5, L"in_scattering_map", 15},
        {6, L"in_specular_color", 2},
        {7, L"in_specular_color_map", 15},
        {8, L"in_specular_weight", 0},
        {9, L"in_specular_weight_map", 15},
        {10, L"in_ior", 0},
        {11, L"in_ior_map", 15},
        {12, L"in_distribution", 1},
        {13, L"in_specular_roughness", 0},
        {14, L"in_specular_roughness_map", 15},
        {15, L"in_specular_spread", 0},
        {16, L"in_specular_spread_map", 15},
        {17, L"in_bump_normal_map", 15},
        {18, L"in_transparency", 2},
        {19, L"in_transparency_map", 15},
        {20, L"in_enable_matte", 1},
        {21, L"in_matte_opacity", 0},
        {22, L"in_matte_opacity_map", 15},
        {23, L"in_matte_opacity_color", 2},
        {24, L"in_matte_opacity_color_map", 15},
        {25, L"in_maximum_ray_depth", 1},
        {26, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_sbs_pbrmaterial
    {
        {0, L"in_ambientOcclusion", 0},
        {1, L"in_ambientOcclusion_map", 15},
        {2, L"in_baseColor", 2},
        {3, L"in_baseColor_map", 15},
        {4, L"in_emissiveColor", 2},
        {5, L"in_emissiveColor_map", 15},
        {6, L"in_emissiveIntensity", 0},
        {7, L"in_emissiveIntensity_map", 15},
        {8, L"in_height", 0},
        {9, L"in_height_map", 15},
        {10, L"in_heightScale", 0},
        {11, L"in_heightScale_map", 15},
        {12, L"in_metallic", 0},
        {13, L"in_metallic_map", 15},
        {14, L"in_normal_map", 15},
        {15, L"in_roughness", 0},
        {16, L"in_roughness_map", 15},
        {17, L"in_opacity", 0},
        {18, L"in_opacity_map", 15},
        {19, L"in_specularLevel", 0},
        {20, L"in_specularLevel_map", 15},
        {21, L"in_anisotropyLevel", 0},
        {22, L"in_anisotropyLevel_map", 15},
        {23, L"in_anisotropyAngle", 0},
        {24, L"in_anisotropyAngle_map", 15},
        {25, L"in_refraction", 0},
        {26, L"in_refraction_map", 15},
        {27, L"in_refractionIOR", 0},
        {28, L"in_scattering", 0},
        {29, L"in_scattering_map", 15},
        {30, L"in_absorption", 0},
        {31, L"in_absorption_map", 15},
        {32, L"in_absorptionColor", 2},
        {33, L"in_absorptionColor_map", 15},
        {34, L"in_enable_matte", 1},
        {35, L"in_matte_opacity", 0},
        {36, L"in_matte_opacity_map", 15},
        {37, L"in_matte_opacity_color", 2},
        {38, L"in_matte_opacity_color_map", 15},
        {39, L"in_maximum_ray_depth", 1},
        {40, L"Tn_map", 15},
        {41, L"Bn_map", 15},
        {42, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_standard_surface
    {
        {0, L"in_diffuse_weight", 0},
        {1, L"in_diffuse_weight_map", 15},
        {2, L"in_color", 2},
        {3, L"in_color_map", 15},
        {4, L"in_diffuse_roughness", 0},
        {5, L"in_diffuse_roughness_map", 15},
        {6, L"in_subsurface_weight", 0},
        {7, L"in_subsurface_weight_map", 15},
        {8, L"in_sss_mfp", 2},
        {9, L"in_sss_mfp_map", 15},
        {10, L"in_sss_mfp_scale", 0},
        {11, L"in_subsurface_profile", 1},
        {12, L"in_sss_maximum_ray_depth", 1},
        {13, L"in_sss_threshold", 0},
        {14, L"in_translucency_weight", 0},
        {15, L"in_translucency_weight_map", 15},
        {16, L"in_translucency_color", 2},
        {17, L"in_translucency_color_map", 15},
        {18, L"in_specular_color", 2},
        {19, L"in_specular_color_map", 15},
        {20, L"in_specular_roughness", 0},
        {21, L"in_specular_roughness_map", 15},
        {22, L"in_specular_spread", 0},
        {23, L"in_specular_spread_map", 15},
        {24, L"in_fresnel_type", 1},
        {25, L"in_ior", 0},
        {26, L"in_face_tint", 2},
        {27, L"in_edge_tint", 2},
        {28, L"in_anisotropy_amount", 0},
        {29, L"in_anisotropy_amount_map", 15},
        {30, L"in_anisotropy_angle", 0},
        {31, L"in_anisotropy_angle_map", 15},
        {32, L"in_anisotropy_map", 2},
        {33, L"in_anisotropy_map_map", 15},
        {34, L"in_refraction_amount", 0},
        {35, L"in_refraction_amount_map", 15},
        {36, L"in_refraction_tint", 2},
        {37, L"in_refraction_tint_map", 15},
        {38, L"in_absorption_depth", 0},
        {39, L"in_absorption_color", 2},
        {40, L"in_absorption_color_map", 15},
        {41, L"in_coating_reflectivity", 0},
        {42, L"in_coating_reflectivity_map", 15},
        {43, L"in_coating_roughness", 0},
        {44, L"in_coating_roughness_map", 15},
        {45, L"in_coating_ior", 0},
        {46, L"in_coating_depth", 0},
        {47, L"in_coating_depth_map", 15},
        {48, L"in_coating_absorption", 2},
        {49, L"in_coating_absorption_map", 15},
        {50, L"in_incandescence_amount", 0},
        {51, L"in_incandescence_amount_map", 15},
        {52, L"in_incandescence_type", 1},
        {53, L"in_incandescence_color", 2},
        {54, L"in_incandescence_color_map", 15},
        {55, L"in_temperature", 1},
        {56, L"in_area_normalize_edf", 1},
        {57, L"in_tonemap_edf", 1},
        {58, L"in_transparency", 2},
        {59, L"in_transparency_map", 15},
        {60, L"in_bump_normal_coating_map", 15},
        {61, L"in_bump_normal_substrate_map", 15},
        {62, L"in_enable_matte", 1},
        {63, L"in_matte_opacity", 0},
        {64, L"in_matte_opacity_map", 15},
        {65, L"in_matte_opacity_color", 2},
        {66, L"in_matte_opacity_color_map", 15},
        {67, L"in_maximum_ray_depth", 1},
        {68, L"Tn_map", 15},
        {69, L"Bn_map", 15},
        {70, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_subsurface
    {
        {0, L"in_sss_profile", 1},
        {1, L"in_color", 2},
        {2, L"in_color_map", 15},
        {3, L"in_sss_amount", 0},
        {4, L"in_sss_amount_map", 15},
        {5, L"in_sss_mfp", 2},
        {6, L"in_sss_mfp_map", 15},
        {7, L"in_sss_mfp_scale", 0},
        {8, L"in_sss_mfp_scale_map", 15},
        {9, L"in_sss_maximum_ray_depth", 1},
        {10, L"in_ior", 0},
        {11, L"in_ior_map", 15},
        {12, L"in_fresnel_weight", 0},
        {13, L"in_fresnel_weight_map", 15},
        {14, L"in_specular_weight", 0},
        {15, L"in_specular_weight_map", 15},
        {16, L"in_specular_roughness", 0},
        {17, L"in_specular_roughness_map", 15},
        {18, L"in_anisotropy_amount", 0},
        {19, L"in_anisotropy_amount_map", 15},
        {20, L"in_anisotropy_angle", 0},
        {21, L"in_anisotropy_angle_map", 15},
        {22, L"in_anisotropy_mode", 1},
        {23, L"in_anisotropy_map", 2},
        {24, L"in_anisotropy_map_map", 15},
        {25, L"in_anisotropy_direction", 3},
        {26, L"in_anisotropy_direction_map", 15},
        {27, L"in_bump_normal_map", 15},
        {28, L"in_enable_matte", 1},
        {29, L"in_matte_opacity", 0},
        {30, L"in_matte_opacity_map", 15},
        {31, L"in_matte_opacity_color", 2},
        {32, L"in_matte_opacity_color_map", 15},
        {33, L"Tn_map", 15},
        {34, L"Bn_map", 15},
        {35, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_switch_surface
    {
        {0, L"in_color", 14},
        {1, L"in_color1", 14},
        {2, L"in_color2", 14},
        {3, L"in_color3", 14},
        {4, L"in_color4", 14},
        {5, L"in_color5", 14},
        {6, L"in_color6", 14},
        {7, L"in_color7", 14},
        {8, L"in_cycle_mode", 1},
        {9, L"in_connected_slots_only", 1},
        {10, L"in_manifold_type", 1},
        {11, L"in_expression", 8},
        {12, L"in_domain", 1},
        {13, L"in_seed", 1},
        {14, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_toon
    {
        {0, L"in_incandescence_weight", 0},
        {1, L"in_incandescence_weight_map", 15},
        {2, L"in_incandescence_attenuation", 0},
        {3, L"in_incandescence_attenuation_map", 15},
        {4, L"in_incandescence_tint", 2},
        {5, L"in_incandescence_tint_map", 15},
        {6, L"in_edf_blend_mode", 1},
        {7, L"in_edf_dark_color", 2},
        {8, L"in_edf_dark_color_map", 15},
        {9, L"in_edf_dark_level", 0},
        {10, L"in_edf_dark_level_map", 15},
        {11, L"in_edf_midtone_color", 2},
        {12, L"in_edf_midtone_color_map", 15},
        {13, L"in_edf_midtone_level", 0},
        {14, L"in_edf_midtone_level_map", 15},
        {15, L"in_edf_bright_color", 2},
        {16, L"in_edf_bright_color_map", 15},
        {17, L"in_edf_softness", 0},
        {18, L"in_edf_softness_map", 15},
        {19, L"in_incandescence_area_normalize", 1},
        {20, L"in_diffuse_weight", 0},
        {21, L"in_diffuse_weight_map", 15},
        {22, L"in_diffuse_tint", 2},
        {23, L"in_diffuse_tint_map", 15},
        {24, L"in_diffuse_blend_mode", 1},
        {25, L"in_shadow_color", 2},
        {26, L"in_shadow_color_map", 15},
        {27, L"in_shadow_level", 0},
        {28, L"in_shadow_level_map", 15},
        {29, L"in_midtone_color", 2},
        {30, L"in_midtone_color_map", 15},
        {31, L"in_midtone_level", 0},
        {32, L"in_midtone_level_map", 15},
        {33, L"in_highlight_color", 2},
        {34, L"in_highlight_color_map", 15},
        {35, L"in_diffuse_softness", 0},
        {36, L"in_diffuse_softness_map", 15},
        {37, L"in_diffuse_ray_depth", 1},
        {38, L"in_specular_weight", 0},
        {39, L"in_specular_weight_map", 15},
        {40, L"in_specular_roughness", 0},
        {41, L"in_specular_roughness_map", 15},
        {42, L"in_ior", 0},
        {43, L"in_anisotropy_amount", 0},
        {44, L"in_anisotropy_amount_map", 15},
        {45, L"in_anisotropy_angle", 0},
        {46, L"in_anisotropy_angle_map", 15},
        {47, L"in_anisotropy_mode", 1},
        {48, L"in_anisotropy_map", 2},
        {49, L"in_anisotropy_map_map", 15},
        {50, L"in_anisotropy_direction", 3},
        {51, L"in_anisotropy_direction_map", 15},
        {52, L"in_specular_tint", 2},
        {53, L"in_specular_tint_map", 15},
        {54, L"in_specular_blend_mode", 1},
        {55, L"in_glossy_color", 2},
        {56, L"in_glossy_color_map", 15},
        {57, L"in_glossy_level", 0},
        {58, L"in_glossy_level_map", 15},
        {59, L"in_glossy_softness", 0},
        {60, L"in_glossy_softness_map", 15},
        {61, L"in_facing_attenuation", 0},
        {62, L"in_facing_attenuation_map", 15},
        {63, L"in_specular_ray_depth", 1},
        {64, L"in_rim_weight", 0},
        {65, L"in_rim_weight_map", 15},
        {66, L"in_rim_tint", 2},
        {67, L"in_rim_tint_map", 15},
        {68, L"in_rim_blend_mode", 1},
        {69, L"in_rim_softness", 0},
        {70, L"in_rim_softness_map", 15},
        {71, L"in_bump_normal_map", 15},
        {72, L"in_specular_normal_map", 15},
        {73, L"in_normal_control", 1},
        {74, L"in_transparency", 2},
        {75, L"in_transparency_map", 15},
        {76, L"in_contour_color", 2},
        {77, L"in_contour_color_map", 15},
        {78, L"in_contour_opacity", 0},
        {79, L"in_contour_opacity_map", 15},
        {80, L"in_contour_width", 0},
        {81, L"in_contour_width_map", 15},
        {82, L"in_contour_object", 1},
        {83, L"in_contour_material", 1},
        {84, L"in_contour_occlusion", 1},
        {85, L"in_contour_creases", 1},
        {86, L"in_occlusion_threshold", 0},
        {87, L"in_occlusion_threshold_map", 15},
        {88, L"in_crease_threshold", 0},
        {89, L"in_crease_threshold_map", 15},
        {90, L"in_enable_matte", 1},
        {91, L"in_matte_opacity", 0},
        {92, L"in_matte_opacity_map", 15},
        {93, L"in_matte_opacity_color", 2},
        {94, L"in_matte_opacity_color_map", 15},
        {95, L"Tn_map", 15},
        {96, L"Bn_map", 15},
        {97, L"OSLOutputIndex", 1},
    };

    // Textures.

    const std::vector<std::tuple<int, std::wstring, int>> as_anisotropy_vector_field
    {

        {0, L"in_rotation_angle", 0},
        {1, L"in_color", 2},
        {2, L"in_color_map", 15},
        {3, L"in_field_mode", 1},
        {4, L"in_rotation_value", 0},
        {5, L"in_rotation_value_map", 15},
        {6, L"in_rotation_mode", 1},
        {7, L"in_normalize_output", 1},
        {8, L"in_surface_normal_map", 15},
        {9, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_asc_cdl
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_rgb_primaries", 1},
        {3, L"in_slope", 0},
        {4, L"in_slope_map", 15},
        {5, L"in_offset", 0},
        {6, L"in_offset_map", 15},
        {7, L"in_power", 0},
        {8, L"in_power_map", 15},
        {9, L"in_saturation", 0},
        {10, L"in_saturation_map", 15},
        {11, L"in_clamp_output", 1},
        {12, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_attributes
    {
        { 0, L"OSLOutputIndex", 1 },
    };

        const std::vector<std::tuple<int, std::wstring, int>> as_blackbody
    {
        { 0, L"in_incandescence_type", 1 },
        {1, L"in_color", 2},
        {2, L"in_color_map", 15},
        {3, L"in_incandescence_amount", 0},
        {4, L"in_incandescence_amount_map", 15},
        {5, L"in_temperature_scale", 0},
        {6, L"in_temperature_scale_map", 15},
        {7, L"in_temperature", 1},
        {8, L"in_area_normalize_edf", 1},
        {9, L"in_tonemap_edf", 1},
        {10, L"in_specular_amount", 0},
        {11, L"in_specular_amount_map", 15},
        {12, L"in_specular_roughness", 0},
        {13, L"in_specular_roughness_map", 15},
        {14, L"in_ior", 0},
        {15, L"in_bump_normal_map", 15},
        {16, L"in_enable_matte", 1},
        {17, L"in_matte_opacity", 0},
        {18, L"in_matte_opacity_map", 15},
        {19, L"in_matte_opacity_color", 2},
        {20, L"in_maximum_ray_depth", 1},
        {21, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_blend_color
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_weight", 0},
        {3, L"in_weight_map", 15},
        {4, L"in_color2", 2},
        {5, L"in_color2_map", 15},
        {6, L"in_weight2", 0},
        {7, L"in_weight2_map", 15},
        {8, L"in_blend_mode", 1},
        {9, L"in_clamp_output", 1},
        {10, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_color_transform
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_inputSpace", 1},
        {3, L"in_outputSpace", 1},
        {4, L"in_colorProfile_map", 15},
        {5, L"in_ignoreColorSpaceFileRules_map", 15},
        {6, L"in_colorSpace_map", 15},
        {7, L"in_workingSpace_map", 15},
        {8, L"in_colorManagementEnabled_map", 15},
        {9, L"in_colorManagementConfigFileEnabled_map", 15},
        {10, L"in_colorManagementConfigFilePath_map", 15},
        {11, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_composite_color
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_alpha", 0},
        {3, L"in_alpha_map", 15},
        {4, L"in_color2", 2},
        {5, L"in_color2_map", 15},
        {6, L"in_alpha2", 0},
        {7, L"in_alpha2_map", 15},
        {8, L"in_composite_mode", 1},
        {9, L"in_clamp_output", 1},
        {10, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_create_mask
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_alpha", 0},
        {3, L"in_alpha_map", 15},
        {4, L"in_threshold_channel", 1},
        {5, L"in_threshold_value", 0},
        {6, L"in_threshold_value_map", 15},
        {7, L"in_threshold_function", 1},
        {8, L"in_threshold_contrast", 0},
        {9, L"in_threshold_contrast_map", 15},
        {10, L"in_threshold_lower_bound", 0},
        {11, L"in_threshold_lower_bound_map", 15},
        {12, L"in_threshold_upper_bound", 0},
        {13, L"in_threshold_upper_bound_map", 15},
        {14, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_double_shade
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_color2", 2},
        {3, L"in_color2_map", 15},
        {4, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_falloff_angle
    {
        { 0, L"in_vector_1", 3 },
        {1, L"in_vector_1_map", 15},
        {2, L"in_normalize_input_1", 1},
        {3, L"in_vector_2_map", 15},
        {4, L"in_normalize_input_2", 1},
        {5, L"in_smooth_lower_bound", 0},
        {6, L"in_smooth_lower_bound_map", 15},
        {7, L"in_smooth_upper_bound", 0},
        {8, L"in_smooth_upper_bound_map", 15},
        {9, L"in_smooth_function", 1},
        {10, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_fresnel
    {
        { 0, L"in_fresnel_type", 1 },
        {1, L"in_ior", 0},
        {2, L"in_face_tint", 2},
        {3, L"in_edge_tint", 2},
        {4, L"in_complex_eta", 3},
        {5, L"in_complex_kappa", 3},
        {6, L"in_surface_normal_map", 15},
        {7, L"in_viewer_vector_map", 15},
        {8, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_globals
    {
        { 0, L"Pref_map", 15 },
        {1, L"Nref_map", 15},
        {2, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_id_manifold
    {
        { 0, L"in_manifold_type", 1 },
        {1, L"in_expression", 8},
        {2, L"in_domain", 1},
        {3, L"in_seed", 1},
        {4, L"in_output_mode", 1},
        {5, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_invert_color
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_color_model", 1},
        {3, L"in_invert_channel_x", 1},
        {4, L"in_invert_channel_y", 1},
        {5, L"in_invert_channel_z", 1},
        {6, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_luminance
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_deriveFromMayaCMS", 1},
        {3, L"in_inputColorSpace", 1},
        {5, L"in_chromaticityCoordsR_map", 15},
        {7, L"in_chromaticityCoordsG_map", 15},
        {9, L"in_chromaticityCoordsB_map", 15},
        {10, L"in_inputIlluminants", 1},
        {11, L"in_colorTemperature", 1},
        {13, L"in_chromaticityCoordsW_map", 15},
        {14, L"in_colorProfile_map", 15},
        {15, L"in_ignoreColorSpaceFileRules_map", 15},
        {16, L"in_colorSpace_map", 15},
        {17, L"in_workingSpace_map", 15},
        {18, L"in_colorManagementEnabled_map", 15},
        {19, L"in_colorManagementConfigFileEnabled_map", 15},
        {20, L"in_colorManagementConfigFilePath_map", 15},
        {21, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_manifold2D
    {
        { 0, L"in_uv_coord_map", 15 },
        {2, L"in_uv_filter_size_map", 15},
        {3, L"in_bypass_uv", 1},
        {4, L"in_compute_filters", 1},
        {6, L"in_scale_frame_map", 15},
        {8, L"in_translate_frame_map", 15},
        {9, L"in_rotate_frame", 0},
        {10, L"in_rotate_frame_map", 15},
        {12, L"in_frame_center_map", 15},
        {13, L"in_wrap_mode_u", 1},
        {14, L"in_wrap_mode_v", 1},
        {16, L"in_uv_tiles_map", 15},
        {18, L"in_offset_tiles_map", 15},
        {19, L"in_rotate_tiles", 0},
        {20, L"in_rotate_tiles_map", 15},
        {22, L"in_tiles_center_map", 15},
        {24, L"in_tiles_coverage_map", 15},
        {25, L"in_mirror_u", 1},
        {26, L"in_mirror_v", 1},
        {27, L"in_wrap_u", 1},
        {28, L"in_wrap_v", 1},
        {29, L"in_stagger_uv", 1},
        {30, L"in_swap_uv", 1},
        {32, L"in_noise_uv_map", 15},
        {33, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_noise2d
    {
        { 0, L"in_color1", 2 },
        {1, L"in_color1_map", 15},
        {2, L"in_color2", 2},
        {3, L"in_color2_map", 15},
        {4, L"in_contrast", 0},
        {5, L"in_contrast_map", 15},
        {6, L"in_type", 1},
        {7, L"in_intensity", 0},
        {8, L"in_intensity_map", 15},
        {9, L"in_frequency_x", 0},
        {10, L"in_frequency_x_map", 15},
        {11, L"in_frequency_y", 0},
        {12, L"in_frequency_y_map", 15},
        {13, L"in_ridges", 1},
        {14, L"in_inflection", 1},
        {15, L"in_signed_noise", 1},
        {16, L"in_frame_time", 0},
        {17, L"in_frame_time_map", 15},
        {18, L"in_time_scale", 0},
        {19, L"in_time_scale_map", 15},
        {20, L"in_periodic", 1},
        {21, L"in_period_x", 0},
        {22, L"in_period_x_map", 15},
        {23, L"in_period_y", 0},
        {24, L"in_period_y_map", 15},
        {25, L"in_period_time", 0},
        {26, L"in_period_time_map", 15},
        {27, L"in_smoothness", 0},
        {28, L"in_smoothness_map", 15},
        {29, L"in_jittering", 0},
        {30, L"in_jittering_map", 15},
        {31, L"in_anisotropy", 1},
        {32, L"in_direction", 3},
        {33, L"in_direction_map", 15},
        {34, L"in_bandwidth", 0},
        {35, L"in_bandwidth_map", 15},
        {36, L"in_impulses", 1},
        {37, L"in_filter_noise", 1},
        {38, L"in_amplitude", 0},
        {39, L"in_amplitude_map", 15},
        {40, L"in_octaves", 1},
        {41, L"in_cascade_mode", 1},
        {42, L"in_lacunarity", 0},
        {43, L"in_lacunarity_map", 15},
        {44, L"in_offset", 0},
        {45, L"in_offset_map", 15},
        {46, L"in_noise_gain", 0},
        {47, L"in_noise_gain_map", 15},
        {48, L"in_distortion", 0},
        {49, L"in_distortion_map", 15},
        {50, L"in_uvCoord_map", 15},
        {52, L"in_uvFilterSize_map", 15},
        {53, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_noise3d
    {
        { 0, L"in_color1", 2 },
        {1, L"in_color1_map", 15},
        {2, L"in_color2", 2},
        {3, L"in_color2_map", 15},
        {4, L"in_contrast", 0},
        {5, L"in_contrast_map", 15},
        {6, L"in_type", 1},
        {7, L"in_intensity", 0},
        {8, L"in_intensity_map", 15},
        {9, L"in_frequency", 3},
        {10, L"in_frequency_map", 15},
        {11, L"in_ridges", 1},
        {12, L"in_inflection", 1},
        {13, L"in_signed_noise", 1},
        {14, L"in_frame_time", 0},
        {15, L"in_frame_time_map", 15},
        {16, L"in_time_scale", 0},
        {17, L"in_time_scale_map", 15},
        {18, L"in_periodic", 1},
        {19, L"in_period", 3},
        {20, L"in_period_map", 15},
        {21, L"in_period_time", 0},
        {22, L"in_period_time_map", 15},
        {23, L"in_smoothness", 0},
        {24, L"in_smoothness_map", 15},
        {25, L"in_jittering", 0},
        {26, L"in_jittering_map", 15},
        {27, L"in_anisotropy", 1},
        {28, L"in_direction", 3},
        {29, L"in_direction_map", 15},
        {30, L"in_bandwidth", 0},
        {31, L"in_bandwidth_map", 15},
        {32, L"in_impulses", 1},
        {33, L"in_filter_noise", 1},
        {34, L"in_amplitude", 0},
        {35, L"in_amplitude_map", 15},
        {36, L"in_octaves", 1},
        {37, L"in_cascade_mode", 1},
        {38, L"in_lacunarity", 0},
        {39, L"in_lacunarity_map", 15},
        {40, L"in_offset", 0},
        {41, L"in_offset_map", 15},
        {42, L"in_noise_gain", 0},
        {43, L"in_noise_gain_map", 15},
        {44, L"in_distortion", 0},
        {45, L"in_distortion_map", 15},
        {46, L"in_refPointCamera_map", 15},
        {47, L"in_placementMatrix_map", 15},
        {48, L"in_wrap", 1},
        {49, L"in_wrap_map", 15},
        {50, L"in_local", 1},
        {51, L"in_local_map", 15},
        {52, L"in_blend", 0},
        {53, L"in_blend_map", 15},
        {54, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_ray_switch
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_color_light", 2},
        {3, L"in_color_light_map", 15},
        {4, L"in_color_shadow", 2},
        {5, L"in_color_shadow_map", 15},
        {6, L"in_color_transparency", 2},
        {7, L"in_color_transparency_map", 15},
        {8, L"in_color_diffuse", 2},
        {9, L"in_color_diffuse_map", 15},
        {10, L"in_color_glossy", 2},
        {11, L"in_color_glossy_map", 15},
        {12, L"in_color_specular", 2},
        {13, L"in_color_specular_map", 15},
        {14, L"in_color_subsurface", 2},
        {15, L"in_color_subsurface_map", 15},
        {16, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_space_transform
    {
        { 0, L"in_point", 3 },
        {1, L"in_point_map", 15},
        {2, L"in_normal", 3},
        {3, L"in_normal_map", 15},
        {4, L"in_vector", 3},
        {5, L"in_vector_map", 15},
        {6, L"in_from_space", 1},
        {7, L"in_to_space", 1},
        {8, L"in_normalize_vectors", 1},
        {9, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_switch_texture
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_color1", 2},
        {3, L"in_color1_map", 15},
        {4, L"in_color2", 2},
        {5, L"in_color2_map", 15},
        {6, L"in_color3", 2},
        {7, L"in_color3_map", 15},
        {8, L"in_color4", 2},
        {9, L"in_color4_map", 15},
        {10, L"in_color5", 2},
        {11, L"in_color5_map", 15},
        {12, L"in_color6", 2},
        {13, L"in_color6_map", 15},
        {14, L"in_color7", 2},
        {15, L"in_color7_map", 15},
        {16, L"in_cycle_mode", 1},
        {17, L"in_manifold_type", 1},
        {18, L"in_expression", 8},
        {19, L"in_domain", 1},
        {20, L"in_seed", 1},
        {21, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_swizzle
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_alpha", 0},
        {3, L"in_alpha_map", 15},
        {4, L"in_red_channel", 1},
        {5, L"in_green_channel", 1},
        {6, L"in_blue_channel", 1},
        {7, L"in_alpha_channel", 1},
        {8, L"in_invert_red", 1},
        {9, L"in_invert_green", 1},
        {10, L"in_invert_blue", 1},
        {11, L"in_invert_alpha", 1},
        {12, L"in_vector", 3},
        {13, L"in_vector_map", 15},
        {14, L"in_x_channel", 1},
        {15, L"in_y_channel", 1},
        {16, L"in_z_channel", 1},
        {17, L"in_invert_x", 1},
        {18, L"in_invert_y", 1},
        {19, L"in_invert_z", 1},
        {20, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_texture
    {
        { 0, L"in_filename", 8 },
        {1, L"in_atlas_type", 1},
        {2, L"in_color", 2},
        {3, L"in_color_map", 15},
        {4, L"in_alpha", 0},
        {5, L"in_alpha_map", 15},
        {6, L"in_starting_channel", 1},
        {7, L"in_s_blur_amount", 0},
        {8, L"in_s_blur_amount_map", 15},
        {9, L"in_t_blur_amount", 0},
        {10, L"in_t_blur_amount_map", 15},
        {11, L"in_s_filter_width", 0},
        {12, L"in_s_filter_width_map", 15},
        {13, L"in_t_filter_width", 0},
        {14, L"in_t_filter_width_map", 15},
        {15, L"in_s_wrap", 1},
        {16, L"in_t_wrap", 1},
        {17, L"in_interpolation_method", 1},
        {18, L"in_enable_cms", 1},
        {19, L"in_eotf", 1},
        {20, L"in_rgb_primaries", 1},
        {21, L"in_workingspace_rgb_primaries", 1},
        {22, L"in_texture_coords_map", 15},
        {24, L"in_texture_coords_filter_map", 15},
        {25, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_texture3d
    {
        { 0, L"in_filename", 8 },
        {1, L"in_starting_channel", 1},
        {2, L"in_color", 2},
        {3, L"in_color_map", 15},
        {4, L"in_channel_fill", 0},
        {5, L"in_channel_fill_map", 15},
        {6, L"in_time", 0},
        {7, L"in_time_map", 15},
        {8, L"in_s_wrap", 1},
        {9, L"in_t_wrap", 1},
        {10, L"in_r_wrap", 1},
        {11, L"in_s_blur", 0},
        {12, L"in_t_blur", 0},
        {13, L"in_r_blur", 0},
        {14, L"in_s_width", 0},
        {15, L"in_t_width", 0},
        {16, L"in_r_width", 0},
        {17, L"in_surface_point_map", 15},
        {18, L"in_coordsys", 1},
        {19, L"in_placement_matrix_map", 15},
        {20, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_texture_info
    {
        { 0, L"in_texture_file", 8 },
        {1, L"in_texture_file_map", 15},
        {2, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_triplanar
    {
        { 0, L"in_blend_mode", 1 },
        {1, L"in_blend_softness", 0},
        {2, L"in_blend_softness_map", 15},
        {3, L"in_surface_point_map", 15},
        {4, L"in_space", 1},
        {5, L"in_normal_map", 15},
        {6, L"in_placement_matrix_map", 15},
        {7, L"in_enable_cms", 1},
        {8, L"in_workingspace_rgb_primaries", 1},
        {9, L"in_x_axis_color", 2},
        {10, L"in_x_axis_filename", 8},
        {11, L"in_x_axis_width", 0},
        {12, L"in_x_axis_height", 0},
        {13, L"in_x_axis_horizontal_offset", 0},
        {14, L"in_x_axis_vertical_offset", 0},
        {15, L"in_x_axis_rotation_angle", 0},
        {16, L"in_x_axis_swrap", 1},
        {17, L"in_x_axis_twrap", 1},
        {18, L"in_x_axis_sflip", 1},
        {19, L"in_x_axis_tflip", 1},
        {20, L"in_x_tex_eotf", 1},
        {21, L"in_x_tex_rgb_primaries", 1},
        {22, L"in_y_axis_color", 2},
        {23, L"in_y_axis_filename", 8},
        {24, L"in_y_axis_width", 0},
        {25, L"in_y_axis_height", 0},
        {26, L"in_y_axis_horizontal_offset", 0},
        {27, L"in_y_axis_vertical_offset", 0},
        {28, L"in_y_axis_rotation_angle", 0},
        {29, L"in_y_axis_swrap", 1},
        {30, L"in_y_axis_twrap", 1},
        {31, L"in_y_axis_sflip", 1},
        {32, L"in_y_axis_tflip", 1},
        {33, L"in_y_tex_eotf", 1},
        {34, L"in_y_tex_rgb_primaries", 1},
        {35, L"in_z_axis_color", 2},
        {36, L"in_z_axis_filename", 8},
        {37, L"in_z_axis_width", 0},
        {38, L"in_z_axis_height", 0},
        {39, L"in_z_axis_horizontal_offset", 0},
        {40, L"in_z_axis_vertical_offset", 0},
        {41, L"in_z_axis_rotation_angle", 0},
        {42, L"in_z_axis_swrap", 1},
        {43, L"in_z_axis_twrap", 1},
        {44, L"in_z_axis_sflip", 1},
        {45, L"in_z_axis_tflip", 1},
        {46, L"in_z_tex_eotf", 1},
        {47, L"in_z_tex_rgb_primaries", 1},
        {48, L"in_randomization", 0},
        {49, L"in_randomization_map", 15},
        {50, L"in_manifold", 1},
        {51, L"in_manifold_map", 15},
        {52, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_vary_color
    {
        { 0, L"in_color", 2 },
        {1, L"in_color_map", 15},
        {2, L"in_color_mode", 1},
        {3, L"in_manifold_type", 1},
        {4, L"in_expression", 8},
        {5, L"in_domain", 1},
        {6, L"in_seed", 1},
        {7, L"in_variation_mode", 1},
        {8, L"in_vary_hue", 0},
        {9, L"in_vary_hue_map", 15},
        {10, L"in_vary_saturation", 0},
        {11, L"in_vary_saturation_map", 15},
        {12, L"in_vary_value", 0},
        {13, L"in_vary_value_map", 15},
        {14, L"in_vary_red", 0},
        {15, L"in_vary_red_map", 15},
        {16, L"in_vary_green", 0},
        {17, L"in_vary_green_map", 15},
        {18, L"in_vary_blue", 0},
        {19, L"in_vary_blue_map", 15},
        {20, L"in_vary_lstar", 0},
        {21, L"in_vary_lstar_map", 15},
        {22, L"in_vary_astar", 0},
        {23, L"in_vary_astar_map", 15},
        {24, L"in_vary_bstar", 0},
        {25, L"in_vary_bstar_map", 15},
        {26, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_voronoi2d
    {
        { 0, L"in_color1", 2 },
        {1, L"in_color1_map", 15},
        {2, L"in_color2", 2},
        {3, L"in_color2_map", 15},
        {4, L"in_contrast", 0},
        {5, L"in_contrast_map", 15},
        {6, L"in_density", 0},
        {7, L"in_density_map", 15},
        {8, L"in_jittering", 0},
        {9, L"in_jittering_map", 15},
        {10, L"in_metric", 1},
        {11, L"in_Minkowski_p", 0},
        {12, L"in_Minkowski_p_map", 15},
        {13, L"in_coverage", 0},
        {14, L"in_coverage_map", 15},
        {15, L"in_featuresMode", 1},
        {16, L"in_amplitude", 0},
        {17, L"in_amplitude_map", 15},
        {18, L"in_octaves", 1},
        {19, L"in_lacunarity", 0},
        {20, L"in_persistence", 0},
        {21, L"in_persistence_map", 15},
        {22, L"in_uvCoord_map", 15},
        {24, L"in_uvFilterSize_map", 15},
        {25, L"OSLOutputIndex", 1},
    };

    const std::vector<std::tuple<int, std::wstring, int>> as_voronoi3d
    {
        {0, L"in_color1", 2},
        {1, L"in_color1_map", 15},
        {2, L"in_color2", 2},
        {3, L"in_color2_map", 15},
        {4, L"in_contrast", 0},
        {5, L"in_contrast_map", 15},
        {6, L"in_density", 0},
        {7, L"in_density_map", 15},
        {8, L"in_jittering", 0},
        {9, L"in_jittering_map", 15},
        {10, L"in_metric", 1},
        {11, L"in_Minkowski_p", 0},
        {12, L"in_Minkowski_p_map", 15},
        {13, L"in_coverage", 0},
        {14, L"in_coverage_map", 15},
        {15, L"in_featuresMode", 1},
        {16, L"in_amplitude", 0},
        {17, L"in_amplitude_map", 15},
        {18, L"in_octaves", 1},
        {19, L"in_lacunarity", 0},
        {20, L"in_persistence", 0},
        {21, L"in_persistence_map", 15},
        {22, L"in_softEdges", 1},
        {23, L"in_placementMatrix_map", 15},
        {24, L"in_surfacePoint_map", 15},
        {25, L"in_wrap", 1},
        {26, L"in_wrap_map", 15},
        {27, L"in_local", 1},
        {28, L"in_local_map", 15},
        {29, L"in_blend", 0},
        {30, L"in_blend_map", 15},
        {31, L"OSLOutputIndex", 1},
    };
}

std::map<std::string,
    std::vector<std::tuple<int, std::wstring, int>>
    > obsolete_parameters =
{
    {"as_blend_shader",             as_blend_shader},
    {"as_disney_material",          as_disney_material},
    {"as_glass",                    as_glass},
    {"as_metal",                    as_metal},
    {"as_matte",                    as_matte},
    {"as_plastic",                  as_plastic},
    {"as_sbs_pbrmaterial",          as_sbs_pbrmaterial},
    {"as_standard_surface",         as_standard_surface},
    {"as_subsurface",               as_subsurface},
    {"as_switch_surface",           as_switch_surface},
    {"as_toon",                     as_toon},
    {"as_anisotropy_vector_field",  as_anisotropy_vector_field},
    {"as_asc_cdl",                  as_asc_cdl},
    {"as_attributes",               as_attributes},
    {"as_blackbody",                as_blackbody},
    {"as_blend_color",              as_blend_color},
    {"as_color_transform",          as_color_transform},
    {"as_composite_color",          as_composite_color},
    {"as_create_mask",              as_create_mask},
    {"as_double_shade",             as_double_shade},
    {"as_falloff_angle",            as_falloff_angle},
    {"as_fresnel",                  as_fresnel},
    {"as_globals",                  as_globals},
    {"as_id_manifold",              as_id_manifold},
    {"as_invert_color",             as_invert_color},
    {"as_luminance",                as_luminance},
    {"as_manifold2D",               as_manifold2D},
    {"as_noise2d",                  as_noise2d},
    {"as_noise3d",                  as_noise3d},
    {"as_ray_switch",               as_ray_switch},
    {"as_space_transform",          as_space_transform},
    {"as_switch_texture",           as_switch_texture},
    {"as_swizzle",                  as_swizzle},
    {"as_texture",                  as_texture},
    {"as_texture3d",                as_texture3d},
    {"as_texture_info",             as_texture_info},
    {"as_triplanar",                as_triplanar},
    {"as_vary_color",               as_vary_color},
    {"as_voronoi2d",                as_voronoi2d},
    {"as_voronoi3d",                as_voronoi3d},

};