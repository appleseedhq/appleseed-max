#pragma once

// appleseed.foundation headers.

#include <map>
#include <string>
#include <tuple>

namespace
{
    const std::map<std::wstring, int> type_map
    {
        {L"TYPE_FLOAT", 0},
        {L"TYPE_INT",   1},
        {L"TYPE_RGBA",  2},
        {L"TYPE_POINT3",3},
        {L"TYPE_STRING",8},
        {L"TYPE_MTL",   14},
        {L"TYPE_TEXMAP",15}
    };
    
    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_blend_shader
    {
        {0, L"in_color", L"TYPE_MTL"},
        {1, L"in_weight", L"TYPE_FLOAT"},
        {2, L"in_weight_map", L"TYPE_TEXMAP"},
        {3, L"in_layer_visibility", L"TYPE_INT"},
        {4, L"in_color1", L"TYPE_MTL"},
        {5, L"in_weight1", L"TYPE_FLOAT"},
        {6, L"in_weight1_map", L"TYPE_TEXMAP"},
        {7, L"in_layer_visibility1", L"TYPE_INT"},
        {8, L"in_color2", L"TYPE_MTL"},
        {9, L"in_weight2", L"TYPE_FLOAT"},
        {10, L"in_weight2_map", L"TYPE_TEXMAP"},
        {11, L"in_layer_visibility2", L"TYPE_INT"},
        {12, L"in_color3", L"TYPE_MTL"},
        {13, L"in_weight3", L"TYPE_FLOAT"},
        {14, L"in_weight3_map", L"TYPE_TEXMAP"},
        {15, L"in_layer_visibility3", L"TYPE_INT"},
        {16, L"in_color4", L"TYPE_MTL"},
        {17, L"in_weight4", L"TYPE_FLOAT"},
        {18, L"in_weight4_map", L"TYPE_TEXMAP"},
        {19, L"in_layer_visibility4", L"TYPE_INT"},
        {20, L"in_color5", L"TYPE_MTL"},
        {21, L"in_weight5", L"TYPE_FLOAT"},
        {22, L"in_weight5_map", L"TYPE_TEXMAP"},
        {23, L"in_layer_visibility5", L"TYPE_INT"},
        {24, L"in_color6", L"TYPE_MTL"},
        {25, L"in_weight6", L"TYPE_FLOAT"},
        {26, L"in_weight6_map", L"TYPE_TEXMAP"},
        {27, L"in_layer_visibility6", L"TYPE_INT"},
        {28, L"in_color7", L"TYPE_MTL"},
        {29, L"in_weight7", L"TYPE_FLOAT"},
        {30, L"in_weight7_map", L"TYPE_TEXMAP"},
        {31, L"in_layer_visibility7", L"TYPE_INT"},
        {32, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_disney_material
    {
        {0, L"in_color", L"TYPE_RGBA"},
        {1, L"in_color_map", L"TYPE_TEXMAP"},
        {2, L"in_subsurface_amount", L"TYPE_FLOAT"},
        {3, L"in_subsurface_amount_map", L"TYPE_TEXMAP"},
        {4, L"in_specular_amount", L"TYPE_FLOAT"},
        {5, L"in_specular_amount_map", L"TYPE_TEXMAP"},
        {6, L"in_roughness", L"TYPE_FLOAT"},
        {7, L"in_roughness_map", L"TYPE_TEXMAP"},
        {8, L"in_specular_tint", L"TYPE_FLOAT"},
        {9, L"in_specular_tint_map", L"TYPE_TEXMAP"},
        {10, L"in_metallic_amount", L"TYPE_FLOAT"},
        {11, L"in_metallic_amount_map", L"TYPE_TEXMAP"},
        {12, L"in_anisotropy_amount", L"TYPE_FLOAT"},
        {13, L"in_anisotropy_amount_map", L"TYPE_TEXMAP"},
        {14, L"in_anisotropy_angle", L"TYPE_FLOAT"},
        {15, L"in_anisotropy_angle_map", L"TYPE_TEXMAP"},
        {16, L"in_anisotropy_vector_map", L"TYPE_RGBA"},
        {17, L"in_anisotropy_vector_map_map", L"TYPE_TEXMAP"},
        {18, L"in_sheen_amount", L"TYPE_FLOAT"},
        {19, L"in_sheen_amount_map", L"TYPE_TEXMAP"},
        {20, L"in_sheen_tint", L"TYPE_FLOAT"},
        {21, L"in_sheen_tint_map", L"TYPE_TEXMAP"},
        {22, L"in_clear_coat", L"TYPE_FLOAT"},
        {23, L"in_clear_coat_map", L"TYPE_TEXMAP"},
        {24, L"in_clear_coat_glossyness", L"TYPE_FLOAT"},
        {25, L"in_clear_coat_glossyness_map", L"TYPE_TEXMAP"},
        {26, L"in_bump_normal_map", L"TYPE_TEXMAP"},
        {27, L"in_enable_matte", L"TYPE_INT"},
        {28, L"in_matte_opacity", L"TYPE_FLOAT"},
        {29, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {30, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {31, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {32, L"in_maximum_ray_depth", L"TYPE_INT"},
        {33, L"Tn_map", L"TYPE_TEXMAP"},
        {34, L"Bn_map", L"TYPE_TEXMAP"},
        {35, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_glass
    {
        {0, L"in_surface_transmittance", L"TYPE_RGBA"},
        {1, L"in_surface_transmittance_map", L"TYPE_TEXMAP"},
        {2, L"in_transmittance_amount", L"TYPE_FLOAT"},
        {3, L"in_transmittance_amount_map", L"TYPE_TEXMAP"},
        {4, L"in_reflection_tint", L"TYPE_RGBA"},
        {5, L"in_reflection_tint_map", L"TYPE_TEXMAP"},
        {6, L"in_refraction_tint", L"TYPE_RGBA"},
        {7, L"in_refraction_tint_map", L"TYPE_TEXMAP"},
        {8, L"in_ior", L"TYPE_FLOAT"},
        {9, L"in_distribution", L"TYPE_INT"},
        {10, L"in_roughness", L"TYPE_FLOAT"},
        {11, L"in_roughness_map", L"TYPE_TEXMAP"},
        {12, L"in_specular_spread", L"TYPE_FLOAT"},
        {13, L"in_specular_spread_map", L"TYPE_TEXMAP"},
        {14, L"in_anisotropy_amount", L"TYPE_FLOAT"},
        {15, L"in_anisotropy_amount_map", L"TYPE_TEXMAP"},
        {16, L"in_anisotropy_angle", L"TYPE_FLOAT"},
        {17, L"in_anisotropy_angle_map", L"TYPE_TEXMAP"},
        {18, L"in_anisotropy_mode", L"TYPE_INT"},
        {19, L"in_anisotropy_map", L"TYPE_RGBA"},
        {20, L"in_anisotropy_map_map", L"TYPE_TEXMAP"},
        {21, L"in_anisotropy_direction", L"TYPE_POINT3"},
        {22, L"in_anisotropy_direction_map", L"TYPE_TEXMAP"},
        {23, L"in_volume_transmittance", L"TYPE_RGBA"},
        {24, L"in_volume_transmittance_map", L"TYPE_TEXMAP"},
        {25, L"in_volume_transmittance_distance", L"TYPE_FLOAT"},
        {26, L"in_volume_transmittance_distance_map", L"TYPE_TEXMAP"},
        {27, L"in_bump_normal_map", L"TYPE_TEXMAP"},
        {28, L"in_enable_matte", L"TYPE_INT"},
        {29, L"in_matte_opacity", L"TYPE_FLOAT"},
        {30, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {31, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {32, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {33, L"in_maximum_ray_depth", L"TYPE_INT"},
        {34, L"Tn_map", L"TYPE_TEXMAP"},
        {35, L"Bn_map", L"TYPE_TEXMAP"},
        {36, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_metal
    {
        {0, L"in_face_reflectance",           L"TYPE_RGBA"},
        {1, L"in_face_reflectance_map",       L"TYPE_TEXMAP"},
        {2, L"in_edge_reflectance",           L"TYPE_RGBA"},
        {3, L"in_edge_reflectance_map",       L"TYPE_TEXMAP"},
        {4, L"in_distribution",               L"TYPE_INT"},
        {5, L"in_roughness",                  L"TYPE_FLOAT"},
        {6, L"in_roughness_map",              L"TYPE_TEXMAP"},
        {7, L"in_anisotropy_amount",          L"TYPE_FLOAT"},
        {8, L"in_anisotropy_amount_map",      L"TYPE_TEXMAP"},
        {9, L"in_anisotropy_angle",           L"TYPE_FLOAT"},
        {10, L"in_anisotropy_angle_map",      L"TYPE_TEXMAP"},
        {11, L"in_anisotropy_mode",           L"TYPE_INT"},
        {12, L"in_anisotropy_map",            L"TYPE_RGBA"},
        {13, L"in_anisotropy_map_map",        L"TYPE_TEXMAP"},
        {14, L"in_anisotropy_direction",      L"TYPE_POINT3"},
        {15, L"in_anisotropy_direction_map",  L"TYPE_TEXMAP"},
        {16, L"in_bump_normal_map",           L"TYPE_TEXMAP"},
        {17, L"in_enable_matte",              L"TYPE_INT"},
        {18, L"in_matte_opacity",             L"TYPE_FLOAT"},
        {19, L"in_matte_opacity_map",         L"TYPE_TEXMAP"},
        {20, L"in_matte_opacity_color",       L"TYPE_RGBA"},
        {21, L"in_matte_opacity_color_map",   L"TYPE_TEXMAP"},
        {22, L"in_maximum_ray_depth",         L"TYPE_INT"},
        {23, L"Tn_map",                       L"TYPE_TEXMAP"},
        {24, L"Bn_map",                       L"TYPE_TEXMAP"},
        {25, L"OSLOutputIndex",               L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_matte
    {
        {0, L"in_color", L"TYPE_MTL"},
        {1, L"in_enable_matte", L"TYPE_INT"},
        {2, L"in_matte_opacity", L"TYPE_FLOAT"},
        {3, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {4, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {5, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {6, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_plastic
    {
        {0, L"in_color", L"TYPE_RGBA"},
        {1, L"in_color_map", L"TYPE_TEXMAP"},
        {2, L"in_diffuse_weight", L"TYPE_FLOAT"},
        {3, L"in_diffuse_weight_map", L"TYPE_TEXMAP"},
        {4, L"in_scattering", L"TYPE_FLOAT"},
        {5, L"in_scattering_map", L"TYPE_TEXMAP"},
        {6, L"in_specular_color", L"TYPE_RGBA"},
        {7, L"in_specular_color_map", L"TYPE_TEXMAP"},
        {8, L"in_specular_weight", L"TYPE_FLOAT"},
        {9, L"in_specular_weight_map", L"TYPE_TEXMAP"},
        {10, L"in_ior", L"TYPE_FLOAT"},
        {11, L"in_ior_map", L"TYPE_TEXMAP"},
        {12, L"in_distribution", L"TYPE_INT"},
        {13, L"in_specular_roughness", L"TYPE_FLOAT"},
        {14, L"in_specular_roughness_map", L"TYPE_TEXMAP"},
        {15, L"in_specular_spread", L"TYPE_FLOAT"},
        {16, L"in_specular_spread_map", L"TYPE_TEXMAP"},
        {17, L"in_bump_normal_map", L"TYPE_TEXMAP"},
        {18, L"in_transparency", L"TYPE_RGBA"},
        {19, L"in_transparency_map", L"TYPE_TEXMAP"},
        {20, L"in_enable_matte", L"TYPE_INT"},
        {21, L"in_matte_opacity", L"TYPE_FLOAT"},
        {22, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {23, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {24, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {25, L"in_maximum_ray_depth", L"TYPE_INT"},
        {26, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_sbs_pbrmaterial
    {
        {0, L"in_ambientOcclusion", L"TYPE_FLOAT"},
        {1, L"in_ambientOcclusion_map", L"TYPE_TEXMAP"},
        {2, L"in_baseColor", L"TYPE_RGBA"},
        {3, L"in_baseColor_map", L"TYPE_TEXMAP"},
        {4, L"in_emissiveColor", L"TYPE_RGBA"},
        {5, L"in_emissiveColor_map", L"TYPE_TEXMAP"},
        {6, L"in_emissiveIntensity", L"TYPE_FLOAT"},
        {7, L"in_emissiveIntensity_map", L"TYPE_TEXMAP"},
        {8, L"in_height", L"TYPE_FLOAT"},
        {9, L"in_height_map", L"TYPE_TEXMAP"},
        {10, L"in_heightScale", L"TYPE_FLOAT"},
        {11, L"in_heightScale_map", L"TYPE_TEXMAP"},
        {12, L"in_metallic", L"TYPE_FLOAT"},
        {13, L"in_metallic_map", L"TYPE_TEXMAP"},
        {14, L"in_normal_map", L"TYPE_TEXMAP"},
        {15, L"in_roughness", L"TYPE_FLOAT"},
        {16, L"in_roughness_map", L"TYPE_TEXMAP"},
        {17, L"in_opacity", L"TYPE_FLOAT"},
        {18, L"in_opacity_map", L"TYPE_TEXMAP"},
        {19, L"in_specularLevel", L"TYPE_FLOAT"},
        {20, L"in_specularLevel_map", L"TYPE_TEXMAP"},
        {21, L"in_anisotropyLevel", L"TYPE_FLOAT"},
        {22, L"in_anisotropyLevel_map", L"TYPE_TEXMAP"},
        {23, L"in_anisotropyAngle", L"TYPE_FLOAT"},
        {24, L"in_anisotropyAngle_map", L"TYPE_TEXMAP"},
        {25, L"in_refraction", L"TYPE_FLOAT"},
        {26, L"in_refraction_map", L"TYPE_TEXMAP"},
        {27, L"in_refractionIOR", L"TYPE_FLOAT"},
        {28, L"in_scattering", L"TYPE_FLOAT"},
        {29, L"in_scattering_map", L"TYPE_TEXMAP"},
        {30, L"in_absorption", L"TYPE_FLOAT"},
        {31, L"in_absorption_map", L"TYPE_TEXMAP"},
        {32, L"in_absorptionColor", L"TYPE_RGBA"},
        {33, L"in_absorptionColor_map", L"TYPE_TEXMAP"},
        {34, L"in_enable_matte", L"TYPE_INT"},
        {35, L"in_matte_opacity", L"TYPE_FLOAT"},
        {36, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {37, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {38, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {39, L"in_maximum_ray_depth", L"TYPE_INT"},
        {40, L"Tn_map", L"TYPE_TEXMAP"},
        {41, L"Bn_map", L"TYPE_TEXMAP"},
        {42, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_standard_surface
    {
        {0, L"in_diffuse_weight", L"TYPE_FLOAT"},
        {1, L"in_diffuse_weight_map", L"TYPE_TEXMAP"},
        {2, L"in_color", L"TYPE_RGBA"},
        {3, L"in_color_map", L"TYPE_TEXMAP"},
        {4, L"in_diffuse_roughness", L"TYPE_FLOAT"},
        {5, L"in_diffuse_roughness_map", L"TYPE_TEXMAP"},
        {6, L"in_subsurface_weight", L"TYPE_FLOAT"},
        {7, L"in_subsurface_weight_map", L"TYPE_TEXMAP"},
        {8, L"in_sss_mfp", L"TYPE_RGBA"},
        {9, L"in_sss_mfp_map", L"TYPE_TEXMAP"},
        {10, L"in_sss_mfp_scale", L"TYPE_FLOAT"},
        {11, L"in_subsurface_profile", L"TYPE_INT"},
        {12, L"in_sss_maximum_ray_depth", L"TYPE_INT"},
        {13, L"in_sss_threshold", L"TYPE_FLOAT"},
        {14, L"in_translucency_weight", L"TYPE_FLOAT"},
        {15, L"in_translucency_weight_map", L"TYPE_TEXMAP"},
        {16, L"in_translucency_color", L"TYPE_RGBA"},
        {17, L"in_translucency_color_map", L"TYPE_TEXMAP"},
        {18, L"in_specular_color", L"TYPE_RGBA"},
        {19, L"in_specular_color_map", L"TYPE_TEXMAP"},
        {20, L"in_specular_roughness", L"TYPE_FLOAT"},
        {21, L"in_specular_roughness_map", L"TYPE_TEXMAP"},
        {22, L"in_specular_spread", L"TYPE_FLOAT"},
        {23, L"in_specular_spread_map", L"TYPE_TEXMAP"},
        {24, L"in_fresnel_type", L"TYPE_INT"},
        {25, L"in_ior", L"TYPE_FLOAT"},
        {26, L"in_face_tint", L"TYPE_RGBA"},
        {27, L"in_edge_tint", L"TYPE_RGBA"},
        {28, L"in_anisotropy_amount", L"TYPE_FLOAT"},
        {29, L"in_anisotropy_amount_map", L"TYPE_TEXMAP"},
        {30, L"in_anisotropy_angle", L"TYPE_FLOAT"},
        {31, L"in_anisotropy_angle_map", L"TYPE_TEXMAP"},
        {32, L"in_anisotropy_map", L"TYPE_RGBA"},
        {33, L"in_anisotropy_map_map", L"TYPE_TEXMAP"},
        {34, L"in_refraction_amount", L"TYPE_FLOAT"},
        {35, L"in_refraction_amount_map", L"TYPE_TEXMAP"},
        {36, L"in_refraction_tint", L"TYPE_RGBA"},
        {37, L"in_refraction_tint_map", L"TYPE_TEXMAP"},
        {38, L"in_absorption_depth", L"TYPE_FLOAT"},
        {39, L"in_absorption_color", L"TYPE_RGBA"},
        {40, L"in_absorption_color_map", L"TYPE_TEXMAP"},
        {41, L"in_coating_reflectivity", L"TYPE_FLOAT"},
        {42, L"in_coating_reflectivity_map", L"TYPE_TEXMAP"},
        {43, L"in_coating_roughness", L"TYPE_FLOAT"},
        {44, L"in_coating_roughness_map", L"TYPE_TEXMAP"},
        {45, L"in_coating_ior", L"TYPE_FLOAT"},
        {46, L"in_coating_depth", L"TYPE_FLOAT"},
        {47, L"in_coating_depth_map", L"TYPE_TEXMAP"},
        {48, L"in_coating_absorption", L"TYPE_RGBA"},
        {49, L"in_coating_absorption_map", L"TYPE_TEXMAP"},
        {50, L"in_incandescence_amount", L"TYPE_FLOAT"},
        {51, L"in_incandescence_amount_map", L"TYPE_TEXMAP"},
        {52, L"in_incandescence_type", L"TYPE_INT"},
        {53, L"in_incandescence_color", L"TYPE_RGBA"},
        {54, L"in_incandescence_color_map", L"TYPE_TEXMAP"},
        {55, L"in_temperature", L"TYPE_INT"},
        {56, L"in_area_normalize_edf", L"TYPE_INT"},
        {57, L"in_tonemap_edf", L"TYPE_INT"},
        {58, L"in_transparency", L"TYPE_RGBA"},
        {59, L"in_transparency_map", L"TYPE_TEXMAP"},
        {60, L"in_bump_normal_coating_map", L"TYPE_TEXMAP"},
        {61, L"in_bump_normal_substrate_map", L"TYPE_TEXMAP"},
        {62, L"in_enable_matte", L"TYPE_INT"},
        {63, L"in_matte_opacity", L"TYPE_FLOAT"},
        {64, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {65, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {66, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {67, L"in_maximum_ray_depth", L"TYPE_INT"},
        {68, L"Tn_map", L"TYPE_TEXMAP"},
        {69, L"Bn_map", L"TYPE_TEXMAP"},
        {70, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_subsurface
    {
        {0, L"in_sss_profile", L"TYPE_INT"},
        {1, L"in_color", L"TYPE_RGBA"},
        {2, L"in_color_map", L"TYPE_TEXMAP"},
        {3, L"in_sss_amount", L"TYPE_FLOAT"},
        {4, L"in_sss_amount_map", L"TYPE_TEXMAP"},
        {5, L"in_sss_mfp", L"TYPE_RGBA"},
        {6, L"in_sss_mfp_map", L"TYPE_TEXMAP"},
        {7, L"in_sss_mfp_scale", L"TYPE_FLOAT"},
        {8, L"in_sss_mfp_scale_map", L"TYPE_TEXMAP"},
        {9, L"in_sss_maximum_ray_depth", L"TYPE_INT"},
        {10, L"in_ior", L"TYPE_FLOAT"},
        {11, L"in_ior_map", L"TYPE_TEXMAP"},
        {12, L"in_fresnel_weight", L"TYPE_FLOAT"},
        {13, L"in_fresnel_weight_map", L"TYPE_TEXMAP"},
        {14, L"in_specular_weight", L"TYPE_FLOAT"},
        {15, L"in_specular_weight_map", L"TYPE_TEXMAP"},
        {16, L"in_specular_roughness", L"TYPE_FLOAT"},
        {17, L"in_specular_roughness_map", L"TYPE_TEXMAP"},
        {18, L"in_anisotropy_amount", L"TYPE_FLOAT"},
        {19, L"in_anisotropy_amount_map", L"TYPE_TEXMAP"},
        {20, L"in_anisotropy_angle", L"TYPE_FLOAT"},
        {21, L"in_anisotropy_angle_map", L"TYPE_TEXMAP"},
        {22, L"in_anisotropy_mode", L"TYPE_INT"},
        {23, L"in_anisotropy_map", L"TYPE_RGBA"},
        {24, L"in_anisotropy_map_map", L"TYPE_TEXMAP"},
        {25, L"in_anisotropy_direction", L"TYPE_POINT3"},
        {26, L"in_anisotropy_direction_map", L"TYPE_TEXMAP"},
        {27, L"in_bump_normal_map", L"TYPE_TEXMAP"},
        {28, L"in_enable_matte", L"TYPE_INT"},
        {29, L"in_matte_opacity", L"TYPE_FLOAT"},
        {30, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {31, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {32, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {33, L"Tn_map", L"TYPE_TEXMAP"},
        {34, L"Bn_map", L"TYPE_TEXMAP"},
        {35, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_switch_surface
    {
        {0, L"in_color", L"TYPE_MTL"},
        {1, L"in_color1", L"TYPE_MTL"},
        {2, L"in_color2", L"TYPE_MTL"},
        {3, L"in_color3", L"TYPE_MTL"},
        {4, L"in_color4", L"TYPE_MTL"},
        {5, L"in_color5", L"TYPE_MTL"},
        {6, L"in_color6", L"TYPE_MTL"},
        {7, L"in_color7", L"TYPE_MTL"},
        {8, L"in_cycle_mode", L"TYPE_INT"},
        {9, L"in_connected_slots_only", L"TYPE_INT"},
        {10, L"in_manifold_type", L"TYPE_INT"},
        {11, L"in_expression", L"TYPE_STRING"},
        {12, L"in_domain", L"TYPE_INT"},
        {13, L"in_seed", L"TYPE_INT"},
        {14, L"OSLOutputIndex", L"TYPE_INT"},
    };

    const std::vector<std::tuple<int, std::wstring, std::wstring>> as_toon
    {
        {0, L"in_incandescence_weight", L"TYPE_FLOAT"},
        {1, L"in_incandescence_weight_map", L"TYPE_TEXMAP"},
        {2, L"in_incandescence_attenuation", L"TYPE_FLOAT"},
        {3, L"in_incandescence_attenuation_map", L"TYPE_TEXMAP"},
        {4, L"in_incandescence_tint", L"TYPE_RGBA"},
        {5, L"in_incandescence_tint_map", L"TYPE_TEXMAP"},
        {6, L"in_edf_blend_mode", L"TYPE_INT"},
        {7, L"in_edf_dark_color", L"TYPE_RGBA"},
        {8, L"in_edf_dark_color_map", L"TYPE_TEXMAP"},
        {9, L"in_edf_dark_level", L"TYPE_FLOAT"},
        {10, L"in_edf_dark_level_map", L"TYPE_TEXMAP"},
        {11, L"in_edf_midtone_color", L"TYPE_RGBA"},
        {12, L"in_edf_midtone_color_map", L"TYPE_TEXMAP"},
        {13, L"in_edf_midtone_level", L"TYPE_FLOAT"},
        {14, L"in_edf_midtone_level_map", L"TYPE_TEXMAP"},
        {15, L"in_edf_bright_color", L"TYPE_RGBA"},
        {16, L"in_edf_bright_color_map", L"TYPE_TEXMAP"},
        {17, L"in_edf_softness", L"TYPE_FLOAT"},
        {18, L"in_edf_softness_map", L"TYPE_TEXMAP"},
        {19, L"in_incandescence_area_normalize", L"TYPE_INT"},
        {20, L"in_diffuse_weight", L"TYPE_FLOAT"},
        {21, L"in_diffuse_weight_map", L"TYPE_TEXMAP"},
        {22, L"in_diffuse_tint", L"TYPE_RGBA"},
        {23, L"in_diffuse_tint_map", L"TYPE_TEXMAP"},
        {24, L"in_diffuse_blend_mode", L"TYPE_INT"},
        {25, L"in_shadow_color", L"TYPE_RGBA"},
        {26, L"in_shadow_color_map", L"TYPE_TEXMAP"},
        {27, L"in_shadow_level", L"TYPE_FLOAT"},
        {28, L"in_shadow_level_map", L"TYPE_TEXMAP"},
        {29, L"in_midtone_color", L"TYPE_RGBA"},
        {30, L"in_midtone_color_map", L"TYPE_TEXMAP"},
        {31, L"in_midtone_level", L"TYPE_FLOAT"},
        {32, L"in_midtone_level_map", L"TYPE_TEXMAP"},
        {33, L"in_highlight_color", L"TYPE_RGBA"},
        {34, L"in_highlight_color_map", L"TYPE_TEXMAP"},
        {35, L"in_diffuse_softness", L"TYPE_FLOAT"},
        {36, L"in_diffuse_softness_map", L"TYPE_TEXMAP"},
        {37, L"in_diffuse_ray_depth", L"TYPE_INT"},
        {38, L"in_specular_weight", L"TYPE_FLOAT"},
        {39, L"in_specular_weight_map", L"TYPE_TEXMAP"},
        {40, L"in_specular_roughness", L"TYPE_FLOAT"},
        {41, L"in_specular_roughness_map", L"TYPE_TEXMAP"},
        {42, L"in_ior", L"TYPE_FLOAT"},
        {43, L"in_anisotropy_amount", L"TYPE_FLOAT"},
        {44, L"in_anisotropy_amount_map", L"TYPE_TEXMAP"},
        {45, L"in_anisotropy_angle", L"TYPE_FLOAT"},
        {46, L"in_anisotropy_angle_map", L"TYPE_TEXMAP"},
        {47, L"in_anisotropy_mode", L"TYPE_INT"},
        {48, L"in_anisotropy_map", L"TYPE_RGBA"},
        {49, L"in_anisotropy_map_map", L"TYPE_TEXMAP"},
        {50, L"in_anisotropy_direction", L"TYPE_POINT3"},
        {51, L"in_anisotropy_direction_map", L"TYPE_TEXMAP"},
        {52, L"in_specular_tint", L"TYPE_RGBA"},
        {53, L"in_specular_tint_map", L"TYPE_TEXMAP"},
        {54, L"in_specular_blend_mode", L"TYPE_INT"},
        {55, L"in_glossy_color", L"TYPE_RGBA"},
        {56, L"in_glossy_color_map", L"TYPE_TEXMAP"},
        {57, L"in_glossy_level", L"TYPE_FLOAT"},
        {58, L"in_glossy_level_map", L"TYPE_TEXMAP"},
        {59, L"in_glossy_softness", L"TYPE_FLOAT"},
        {60, L"in_glossy_softness_map", L"TYPE_TEXMAP"},
        {61, L"in_facing_attenuation", L"TYPE_FLOAT"},
        {62, L"in_facing_attenuation_map", L"TYPE_TEXMAP"},
        {63, L"in_specular_ray_depth", L"TYPE_INT"},
        {64, L"in_rim_weight", L"TYPE_FLOAT"},
        {65, L"in_rim_weight_map", L"TYPE_TEXMAP"},
        {66, L"in_rim_tint", L"TYPE_RGBA"},
        {67, L"in_rim_tint_map", L"TYPE_TEXMAP"},
        {68, L"in_rim_blend_mode", L"TYPE_INT"},
        {69, L"in_rim_softness", L"TYPE_FLOAT"},
        {70, L"in_rim_softness_map", L"TYPE_TEXMAP"},
        {71, L"in_bump_normal_map", L"TYPE_TEXMAP"},
        {72, L"in_specular_normal_map", L"TYPE_TEXMAP"},
        {73, L"in_normal_control", L"TYPE_INT"},
        {74, L"in_transparency", L"TYPE_RGBA"},
        {75, L"in_transparency_map", L"TYPE_TEXMAP"},
        {76, L"in_contour_color", L"TYPE_RGBA"},
        {77, L"in_contour_color_map", L"TYPE_TEXMAP"},
        {78, L"in_contour_opacity", L"TYPE_FLOAT"},
        {79, L"in_contour_opacity_map", L"TYPE_TEXMAP"},
        {80, L"in_contour_width", L"TYPE_FLOAT"},
        {81, L"in_contour_width_map", L"TYPE_TEXMAP"},
        {82, L"in_contour_object", L"TYPE_INT"},
        {83, L"in_contour_material", L"TYPE_INT"},
        {84, L"in_contour_occlusion", L"TYPE_INT"},
        {85, L"in_contour_creases", L"TYPE_INT"},
        {86, L"in_occlusion_threshold", L"TYPE_FLOAT"},
        {87, L"in_occlusion_threshold_map", L"TYPE_TEXMAP"},
        {88, L"in_crease_threshold", L"TYPE_FLOAT"},
        {89, L"in_crease_threshold_map", L"TYPE_TEXMAP"},
        {90, L"in_enable_matte", L"TYPE_INT"},
        {91, L"in_matte_opacity", L"TYPE_FLOAT"},
        {92, L"in_matte_opacity_map", L"TYPE_TEXMAP"},
        {93, L"in_matte_opacity_color", L"TYPE_RGBA"},
        {94, L"in_matte_opacity_color_map", L"TYPE_TEXMAP"},
        {95, L"Tn_map", L"TYPE_TEXMAP"},
        {96, L"Bn_map", L"TYPE_TEXMAP"},
        {97, L"OSLOutputIndex", L"TYPE_INT"},
    };
}

std::map<std::string,
    std::vector<std::tuple<int, std::wstring, std::wstring>>
    > obsolete_parameters =
{
    {"as_blend_shader",         as_blend_shader},
    {"as_disney_material",      as_disney_material},
    {"as_glass",                as_glass},
    {"as_metal",                as_metal},
    {"as_matte",                as_matte},
    {"as_plastic",              as_plastic},
    {"as_sbs_pbrmaterial",      as_sbs_pbrmaterial},
    {"as_standard_surface",     as_standard_surface},
    {"as_subsurface",           as_subsurface},
    {"as_switch_surface",       as_switch_surface},
    {"as_toon",                 as_toon},
};